// Test Scala compilation
// Demonstrates Scala functions for big data processing and functional programming

@lang scala {
function processDataFrame(dataFrame, transformation) {
    return "Processing " + dataFrame + " with " + transformation;
}

function createSparkSession(appName) {
    return "SparkSession.builder().appName(\"" + appName + "\").getOrCreate()";
}

function runAnalytics(dataset, operation) {
    return "Running " + operation + " on " + dataset;
}
}

@lang main {
let appName = "Utopia Data Pipeline";
let sparkSession = scala::createSparkSession(appName);

let rawDataFrame = "customerData.parquet";
let transformation = "groupBy(\"region\").agg(sum(\"revenue\"))";
let processedData = scala::processDataFrame(rawDataFrame, transformation);

let analyticsDataset = "salesMetrics";
let operation = "machine_learning_prediction";
let analyticsResult = scala::runAnalytics(analyticsDataset, operation);

console.log("Spark: " + sparkSession);
console.log("Processing: " + processedData);
console.log("Analytics: " + analyticsResult);
} 